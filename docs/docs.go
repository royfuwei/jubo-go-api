// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "取得App 名稱",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "summary": "取得App 名稱",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.App"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "patch": {
                "description": "Update Order By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Update Order By Id",
                "parameters": [
                    {
                        "description": "update message",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ReqOrderData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/domain.OrderDTO"
                        }
                    },
                    "400": {
                        "description": "請求的body、header驗證失敗",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseError"
                        }
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "description": "Find All patients",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Find All patients",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/domain.RespFindAll"
                        }
                    },
                    "400": {
                        "description": "請求的body、header驗證失敗",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Patient",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Create Patient",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/domain.RespPatientData"
                        }
                    },
                    "400": {
                        "description": "請求的body、header驗證失敗",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseError"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "Find patient by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Find patient by Id",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/domain.RespPatientData"
                        }
                    },
                    "400": {
                        "description": "請求的body、header驗證失敗",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseError"
                        }
                    }
                }
            }
        },
        "/patients/{id}/order": {
            "post": {
                "description": "Create Order By patientId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Create Order By patientId",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/domain.RespPatientData"
                        }
                    },
                    "400": {
                        "description": "請求的body、header驗證失敗",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.App": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                }
            }
        },
        "domain.OrderDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.ReqOrderData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.RespFindAll": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.RespPatientData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.RespPatientData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.OrderDTO"
                    }
                }
            }
        },
        "domain.ResponseError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "自定義錯誤代碼",
                    "type": "string"
                },
                "message": {
                    "description": "錯誤訊息",
                    "type": "string"
                },
                "path": {
                    "description": "API路徑",
                    "type": "string"
                },
                "status": {
                    "description": "錯誤狀態碼",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "jubo-go-api",
	Description:      "Golang Clean Arch for Gin",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
